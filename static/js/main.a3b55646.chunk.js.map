{"version":3,"sources":["components/layout/header.js","components/layout/footer.js","components/layout/index.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","src","alt","birthDate","moment","Date","diff","currentYearOld","href","rel","target","title","path","mdiEmail","mdiTelegram","mdiTwitter","mdiInstagram","mdiGithub","mdiGitlab","mdiBitbucket","mdiNpm","Footer","year","Layout","children","App","role","aria-label","aria-hidden","mdiLanguageJavascript","mdiLanguageTypescript","mdiLanguageHtml5","mdiLanguageCss3","mdiReact","mdiVuejs","mdiNodejs","mdiCordova","mdiWebpack","mdiGit","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a3b55646.chunk.js","sourcesContent":["import React from 'react';\nimport Icon from '@mdi/react';\nimport moment from 'moment';\nimport {\n  mdiNpm,\n  mdiTelegram,\n  mdiGithub,\n  mdiInstagram,\n  mdiEmail,\n  mdiTwitter,\n  mdiGitlab,\n  mdiBitbucket,\n} from '@mdi/js';\n\nconst Header = () => {\n  const currentYearOld = () => {\n    const birthDate = moment(new Date(1996, 0, 17, 3, 30));\n    const now = moment(new Date());\n\n    return now.diff(birthDate, 'year');\n  };\n\n  return (\n    <header className=\"header\">\n      <div className=\"header__avatar\">\n        <img\n          className=\"header__avatar-img\"\n          src=\"https://hsto.org/getpro/moikrug/uploads/user/100/024/364/0/avatar/medium_b927fdb65bb090c8314f17074175b9ee.jpg\"\n          alt=\"Avatar\"\n        />\n      </div>\n      <div className=\"header__description\">\n        <div className=\"header__description-text\">\n          <h1>\n            Shekhovtsov&nbsp;Kirill, {currentYearOld()}&nbsp;years&nbsp;old\n          </h1>\n          <h2>Frontend&nbsp;(Fullstack) Developer,&nbsp;TeamLead</h2>\n        </div>\n        <div className=\"header__icons\">\n          <div className=\"header__icons-icon\">\n            <a\n              href=\"mailto:ksedline@gmail.com?subject=Contact from ksed.dev\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n              title=\"E-Mail\"\n            >\n              <Icon path={mdiEmail} />\n            </a>\n          </div>\n          <div className=\"header__icons-icon\">\n            <a\n              href=\"https://teleg.run/ksedline\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n              title=\"Telegram\"\n            >\n              <Icon path={mdiTelegram} />\n            </a>\n          </div>\n          <div className=\"header__icons-icon\">\n            <a\n              href=\"https://twitter.com/KsedDev\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n              title=\"Twitter\"\n            >\n              <Icon path={mdiTwitter} />\n            </a>\n          </div>\n          <div className=\"header__icons-icon\">\n            <a\n              href=\"https://www.instagram.com/ksedline\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n              title=\"Instagram\"\n            >\n              <Icon path={mdiInstagram} />\n            </a>\n          </div>\n          <div className=\"header__icons-icon\">\n            <a\n              href=\"https://github.com/Ksedline\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n              title=\"GitHub\"\n            >\n              <Icon path={mdiGithub} />\n            </a>\n          </div>\n          <div className=\"header__icons-icon\">\n            <a\n              href=\"https://gitlab.com/Ksedline\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n              title=\"GitLab\"\n            >\n              <Icon path={mdiGitlab} />\n            </a>\n          </div>\n          <div className=\"header__icons-icon\">\n            <a\n              href=\"https://bitbucket.org/Ksedline/\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n              title=\"BitBucket\"\n            >\n              <Icon path={mdiBitbucket} />\n            </a>\n          </div>\n          <div className=\"header__icons-icon\">\n            <a\n              href=\"https://www.npmjs.com/~ksedline\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n              title=\"NPM\"\n            >\n              <Icon path={mdiNpm} />\n            </a>\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport moment from 'moment';\n\nconst Footer = () => {\n  return <footer className=\"footer\">Â© {moment().year()}</footer>;\n};\n\nexport default Footer;\n","import React from 'react';\nimport Header from './header';\nimport Footer from './footer';\nimport '../../index.scss';\n\nconst Layout = ({ children }) => {\n  return (\n    <>\n      <Header />\n      {children}\n      <Footer />\n    </>\n  );\n};\n\nexport default Layout;\n","import React from 'react';\nimport Layout from './components/layout';\nimport Icon from '@mdi/react';\nimport {\n  mdiReact,\n  mdiVuejs,\n  mdiNodejs,\n  mdiCordova,\n  mdiLanguageCss3,\n  mdiLanguageHtml5,\n  mdiLanguageJavascript,\n  mdiLanguageTypescript,\n  mdiWebpack,\n  mdiGit,\n} from '@mdi/js';\n\nconst App = () => {\n  return (\n    <Layout>\n      <div className=\"container\">\n        <h2>About Me</h2>\n        <p>\n          I am a Frontend (Fullstack) developer. I develop interfaces, sites,\n          mobile applications, web-games, chat-bots, services, backend. Coding\n          is my hobby. Coffee is my fuel.\n          <span role=\"img\" aria-label=\"\" aria-hidden=\"false\">\n            ðŸ¥¤\n          </span>\n        </p>\n        <h2>Competitions</h2>\n        <p className=\"container__icons\">\n          <Icon path={mdiLanguageJavascript} title=\"JavaScript\" />\n          <Icon path={mdiLanguageTypescript} title=\"TypeScript\" />\n          <Icon path={mdiLanguageHtml5} title=\"HTML5\" />\n          <Icon path={mdiLanguageCss3} title=\"CSS3\" />\n          <Icon path={mdiReact} title=\"React\" />\n          <Icon path={mdiVuejs} title=\"Vue\" />\n          <Icon path={mdiNodejs} title=\"Node\" />\n          <Icon path={mdiCordova} title=\"Cordova\" />\n          <Icon path={mdiWebpack} title=\"Webpack\" />\n          <Icon path={mdiGit} title=\"Git\" />\n        </p>\n      </div>\n    </Layout>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.scss';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}