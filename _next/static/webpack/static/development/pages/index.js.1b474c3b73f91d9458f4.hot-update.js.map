{"version":3,"file":"static/webpack/static/development/pages/index.js.1b474c3b73f91d9458f4.hot-update.js","sources":["webpack:///./components/three/index.tsx","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/readOnlyError.js"],"sourcesContent":["import { useEffect } from 'react';\nimport * as THREE from 'three';\n\nconst ThreeComponent = () => {\n  const camera: THREE.PerspectiveCamera = new THREE.PerspectiveCamera(70, window.innerWidth / window.innerHeight, 0.01, 10);\n  const scene: THREE.Scene = new THREE.Scene();\n  const geometry: THREE.Geometry | THREE.BufferGeometry = new THREE.BoxGeometry(0.3, 0.3, 0.3);\n  const material: THREE.Material | THREE.Material[] = new THREE.MeshNormalMaterial();\n  const mesh: THREE.Mesh = new THREE.Mesh(geometry, material);\n  const renderer: THREE.WebGLRenderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });\n\n  camera.position.z = 1;\n  scene.add(mesh);\n\n  const init = () => {\n    renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    document.querySelector('#threed').appendChild(renderer.domElement);\n  };\n\n  const animate = () => {\n    requestAnimationFrame(animate);\n    mesh.rotation.x += 0.01;\n    mesh.rotation.y += 0.03;\n    renderer.render(scene, camera);\n  };\n\n  useEffect(() => {\n    setTimeout(() => {\n      init();\n      animate();\n    }, 100)\n\n    return () => {\n\n    };\n  }, []);\n\n  return <div id=\"threed\" />;\n};\n\nexport default ThreeComponent;\n","export default function _readOnlyError(name) {\n  throw new Error(\"\\\"\" + name + \"\\\" is read-only\");\n}"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;ACzCA;AAAA;AAAA;AACA;AACA;;;;A","sourceRoot":""}