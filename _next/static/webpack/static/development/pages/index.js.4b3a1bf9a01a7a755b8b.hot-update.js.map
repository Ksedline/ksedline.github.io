{"version":3,"file":"static/webpack/static/development/pages/index.js.4b3a1bf9a01a7a755b8b.hot-update.js","sources":["webpack:///./components/three/index.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport * as THREE from 'three';\n\nconst ThreeComponent = () => {\n  const camera: THREE.PerspectiveCamera = new THREE.PerspectiveCamera(70, 300 / 300, 0.01, 10);\n  const scene: THREE.Scene = new THREE.Scene();\n  const geometry: THREE.Geometry | THREE.BufferGeometry = new THREE.BoxGeometry(0.3, 0.3, 0.3);\n  const material: THREE.Material | THREE.Material[] = new THREE.MeshNormalMaterial();\n  const mesh: THREE.Mesh = new THREE.Mesh(geometry, material);\n  const [renderer, setRenderer] = useState(null);\n\n  camera.position.z = 1;\n  scene.add(mesh);\n\n  useEffect(() => {\n    setRenderer(new THREE.WebGLRenderer({\n      antialias: true,\n      alpha: true\n    }));\n\n    return () => {\n\n    };\n  }, []);\n\n  useEffect(() => {\n    if (renderer) {\n      renderer.setSize(300, 300);\n      animate();\n    }\n  }, [renderer]);\n\n  const animate = () => {\n    requestAnimationFrame(animate);\n    mesh.rotation.x += 0.01;\n    mesh.rotation.y += 0.03;\n    renderer.render(scene, camera);\n  };\n\n  const appendCanvas = (ref) => {\n    if (ref && renderer) {\n      console.log(ref)\n      ref.appendChild(renderer.domElement);\n    }\n  }\n\n  return (<div ref={appendCanvas} />);\n};\n\nexport default ThreeComponent;\n"],"mappings":";;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AACA;AAOA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAKA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;A","sourceRoot":""}